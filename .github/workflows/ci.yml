name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install VS2019 Build Tools
      - name: Install VS2019 Build Tools
        run: choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --includeRecommended --includeOptional --quiet --norestart" --yes

      # 3Ô∏è‚É£ Setup MSBuild 2019
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '[16.0,17.0)'

      # 4Ô∏è‚É£ Setup JDK 11 (Amazon Corretto)
      - name: Set up JDK 11 (Corretto)
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'corretto'

      # 5Ô∏è‚É£ Setup Node.js 16.3.0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.3.0'

      # 6Ô∏è‚É£ Setup Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 7Ô∏è‚É£ Configure node-gyp to use VS2019
      - name: Configure node-gyp
        run: npm config set msvs_version 2019

      # 8Ô∏è‚É£ Fail-fast Gradle wrapper check
      - name: Fail if Gradle wrapper is missing
        shell: pwsh
        run: |
          $gradlewBat = ".\gradlew.bat"
          $gradleJar = ".\gradle\wrapper\gradle-wrapper.jar"

          if (-not (Test-Path $gradlewBat)) {
              Write-Error "gradlew.bat is missing! Commit it to the repo."
              exit 1
          }

          if (-not (Test-Path $gradleJar)) {
              Write-Error "gradle-wrapper.jar is missing! Commit gradle/wrapper folder to the repo."
              exit 1
          }

          Write-Host "Gradle wrapper files are present."

      # 9Ô∏è‚É£ Make Gradle wrapper executable
      - name: Make Gradle wrapper executable
        shell: pwsh
        run: icacls .\gradlew.bat /grant Everyone:F

      # üîπ Combined Cache for Node and Gradle
      - name: Cache Node and Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            C:\Users\runneradmin\.gradle\caches
            C:\Users\runneradmin\.gradle\wrapper
          key: combined-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            combined-${{ runner.os }}-

      # üîπ Install npm dependencies with retry
      - name: Install npm dependencies
        shell: pwsh
        run: |
          $maxRetries = 5
          $retryDelay = 10
          for ($i=1; $i -le $maxRetries; $i++) {
              try {
                  npm ci --prefer-offline
                  Write-Host "npm ci succeeded"
                  break
              } catch {
                  if ($i -eq $maxRetries) {
                      Write-Error "npm ci failed after $maxRetries attempts"
                      exit 1
                  } else {
                      Write-Host "npm ci failed (attempt $i). Retrying in $retryDelay seconds..."
                      Start-Sleep -Seconds $retryDelay
                  }
              }
          }

      # üîπ Run GT UI Tests
      - name: Run GT UI Tests
        shell: pwsh
        working-directory: ${{ github.workspace }}
        run: npm run gt-ui-tests -- --cucumberTags=@add_activity
