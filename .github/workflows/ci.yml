name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Install VS2019 Build Tools
      - name: Install VS2019 Build Tools
        run: choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --includeRecommended --includeOptional --quiet --norestart" --yes

      # 3️⃣ Setup MSBuild 2019
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '[16.0,17.0)'

      # 4️⃣ Setup JDK 11 (Amazon Corretto)
      - name: Set up JDK 11 (Corretto)
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'corretto'

      # 5️⃣ Setup Node.js 16.3.0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.3.0'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # 6️⃣ Setup Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 7️⃣ Configure node-gyp to use VS2019
      - name: Configure node-gyp
        run: npm config set msvs_version 2019

      # 8️⃣ Ensure Gradle wrapper is present
      - name: Check Gradle Wrapper
        shell: pwsh
        run: |
          Write-Host "Listing gradle\wrapper contents"
          Get-ChildItem gradle\wrapper
          if (-not (Test-Path .\gradlew.bat)) {
              Write-Error "gradlew.bat not found! Ensure wrapper is committed."
              exit 1
          }
          if (-not (Test-Path .\gradle\wrapper\gradle-wrapper.jar)) {
              Write-Error "gradle-wrapper.jar not found! Ensure wrapper is committed."
              exit 1
          }

      # 8️⃣1️⃣ Make Gradle wrapper executable
      - name: Make Gradle wrapper executable
        shell: pwsh
        run: icacls .\gradlew.bat /grant Everyone:F

      # 8️⃣2️⃣ Cache Gradle dependencies
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            C:\Users\runneradmin\.gradle\caches
            C:\Users\runneradmin\.gradle\wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 9️⃣ Install npm dependencies with retry
      - name: Install npm dependencies
        shell: pwsh
        run: |
          $maxRetries = 5
          $retryDelay = 10
          for ($i=1; $i -le $maxRetries; $i++) {
              try {
                  npm ci --prefer-offline
                  Write-Host "npm ci succeeded"
                  break
              } catch {
                  if ($i -eq $maxRetries) {
                      Write-Error "npm ci failed after $maxRetries attempts"
                      exit 1
                  } else {
                      Write-Host "npm ci failed (attempt $i). Retrying in $retryDelay seconds..."
                      Start-Sleep -Seconds $retryDelay
                  }
              }
          }

      # 1️⃣2️⃣ Run GT UI Tests
      - name: Run GT UI Tests
        shell: pwsh
        working-directory: ${{ github.workspace }}
        run: npm run gt-ui-tests -- --cucumberTags=@add_activity
        shell: pwsh
        working-directory: ${{ github.workspace }}
        run: npm run gt-ui-tests -- --cucumberTags=@add_activity
