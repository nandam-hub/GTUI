name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # allows manual trigger for fresh build

jobs:
  build-and-test:
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Fail-fast Gradle wrapper check (fixed PowerShell syntax)
      - name: Verify Gradle wrapper
        shell: pwsh
        run: |
          Write-Host "üîç Checking Gradle wrapper..."
          if (-not (Test-Path "./gradlew")) { Write-Error "‚ùå gradlew missing in repo root"; exit 1 }
          if (-not (Test-Path "./gradlew.bat")) { Write-Error "‚ùå gradlew.bat missing in repo root"; exit 1 }
          if (-not (Test-Path "./gradle/wrapper/gradle-wrapper.jar")) { Write-Error "‚ùå gradle-wrapper.jar missing"; exit 1 }
          if (-not (Test-Path "./gradle/wrapper/gradle-wrapper.properties")) { Write-Error "‚ùå gradle-wrapper.properties missing"; exit 1 }
          if ((Test-Path "./gradle/wrapper/gradlew") -or (Test-Path "./gradle/wrapper/gradlew.bat")) {
              Write-Error "‚ùå Duplicate wrapper scripts inside gradle/wrapper! Remove them."
              exit 1
          }
          Write-Host "‚úÖ Gradle wrapper check passed."

      # 3Ô∏è‚É£ Install VS2019 Build Tools
      - name: Install VS2019 Build Tools
        run: choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --includeRecommended --includeOptional --quiet --norestart" --yes

      # 4Ô∏è‚É£ Setup MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '[16.0,17.0)'

      # 5Ô∏è‚É£ Setup JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 11

      # 6Ô∏è‚É£ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.3.0'

      # 7Ô∏è‚É£ Setup Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 8Ô∏è‚É£ Configure node-gyp for VS2019
      - name: Configure node-gyp
        run: npm config set msvs_version 2019

      # 9Ô∏è‚É£ Make Gradle wrapper executable
      - name: Make Gradle wrapper executable
        shell: pwsh
        run: icacls .\gradlew.bat /grant Everyone:F

      # üîπ Cache Node modules and Gradle
      - name: Cache Node and Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            C:\Users\runneradmin\.gradle\caches
            C:\Users\runneradmin\.gradle\wrapper
            **/node_modules
          key: combined-${{ runner.os }}-${{ hashFiles('**/package-lock.json','**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            combined-${{ runner.os }}-

      # üîπ Install npm dependencies with retry
      - name: Install npm dependencies
        shell: pwsh
        run: |
          $maxRetries = 5
          $retryDelay = 10
          for ($i=1; $i -le $maxRetries; $i++) {
              try {
                  npm ci --prefer-offline
                  Write-Host "‚úÖ npm install succeeded"
                  break
              } catch {
                  if ($i -eq $maxRetries) { Write-Error "‚ùå npm install failed after $maxRetries attempts"; exit 1 }
                  else { Write-Host "npm install failed (attempt $i). Retrying in $retryDelay seconds..."; Start-Sleep -Seconds $retryDelay }
              }
          }

      # üîπ Run fresh Gradle build if manually triggered
      - name: Gradle fresh build
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: .\gradlew.bat clean build --no-build-cache

      # üîπ Run GT UI Tests
      - name: Run GT UI Tests
        shell: pwsh
        run: npm run gt-ui-tests -- --cucumberTags=@add_activity
